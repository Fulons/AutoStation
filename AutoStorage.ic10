alias sorter d0

alias amount r15
alias hash r14
alias exporting r13
alias selected r12

define structureSorter -1009150565
define structureSilo 1155865682
define structureLEDMedium -53151617
define structureLEDSmall -815193061
define structureLED 1944485013
define structureMemory -851746783

define GMModeRequestAmount      999999991        #Request Amount of Hash
define GMModeRequestWithdraw    999999992      #Requested Withdraw Hash
define GMModeStopWithdraw       999999993         #
define GMModeWithdrawnAmount    999999994      #Request Withdraw Amount

#INIT
move exporting 0
move selected 0
s sorter On 1
s sorter Mode 2
sb structureSilo On 1   #Silo.On()
sb structureSilo Open 0 #Silo.Close()
sb structureLEDSmall Setting 3 #each LedDisplay.setNum(3)
sb structureLEDSmall Color 0   #each LedDisplay.setColor(Blue)
lb r0 structureLED On Maximum       #any LedDiode.isOn()
sb structureLED On 0                #each LedDiode.On()
sb structureLED Color 0             #each LedDiode.Color(Blue)

breqz r0 4                              #If any LedDiode.On()
    sb structureSilo ClearMemory 0          #Reset Silo
    sb structureLEDMedium Setting 0          #Reset LED
    s db Setting 0                          #Reset hash (type)
lb amount structureLEDMedium Setting Maximum #Load Amount
l hash db Setting                           #Load Hash
brnez hash wait         #If hash == 0
        ls hash sorter 0 OccupantHash   #Read sorter.OccupantHash
        sb structureMemory Setting 0    #Mem = 0
        yield
    breqz hash -3           #While sorter.OccupantHash == 0
    s db Setting hash       #Set hash to display
j accept
#END INIT
setSelected:
move selected 1
sb structureMemory Setting -1 #Mem = Selected
sb structureLED Color 2
j ra
unSetSelected:
move selected 0
sb structureLED Color 0
j ra
accept:
ls r0 sorter 0 Quantity
add amount amount r0        #Amount += quantity
sb structureLEDMedium Setting amount     #LEDTop = amount
s sorter Output 1             #Sorter.output(accept)
yield   #Double yield helps input counting to become correct
wait:
yield
lb r0 structureMemory Setting Maximum
lb r1 structureMemory Setting Minimum
select r0 r0 r0 r1
sb structureLEDSmall Setting r0
brnez r0 3          #if MEM == 0
    jal unSetSelected
    j checkInput
brne r0 hash 3              #if Mem == hash
    jal setSelected
    j checkInput            #checkInput()
beqz selected checkInput   #if selected == true
brne r0 GMModeRequestAmount 3
    sb structureMemory Setting amount   #Mem = amount
    jal unSetSelected
brne r0 GMModeRequestWithdraw 4
    sb structureMemory Setting 1        #Mem = true
    sb structureSilo Open 1
    jal unSetSelected
brne r0 GMModeStopWithdraw 4
    sb structureMemory Setting 1        #Mem = true 
    sb structureSilo Open 0
    jal unSetSelected
brne r0 GMModeWithdrawnAmount 8
    sb structureMemory Setting 1        #Mem = true
    yield
    lb r0 structureMemory Setting Maximum
    beq r0 1 -2
    sb structureMemory Setting 1        #Mem = true
    sub amount amount r0
    jal unSetSelected
checkInput:
ls r0 sorter 0 OccupantHash
beqz r0 wait                #if sorter.Occupant == null return 
beq r0 hash accept          #if sorter.Occupant == hash accept()
decline:                    #decline()
s sorter Output 0           #Sorter.output(decline)
yield
j wait